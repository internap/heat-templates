#
# This is a multi region hello world HOT template defining two remote stacks
# in different regions.
#
heat_template_version: 2013-05-23

description: >
  Hello world HOT template that defines two remote stacks, one for RegionOne
  and one for RegionTwo, using the hello_world.yaml template.

parameters:
  flavor:
    type: string
    description: Flavor for the instances to be created
    constraints:
      - custom_constraint: nova.flavor
        description: Must be a flavor known to Nova
  image:
    type: string
    description: Name or ID of the image to use for the instances.
    constraints:
      - custom_constraint: glance.image
        description: Must identify an image known to Glance
  network:
    type: string
    description: Name or ID of the network to use for the instances
    constraints:
      - custom_constraint: neutron.network
        description: Must identify an network known to Neutron
  keypair_name:
    type: string
    description: Keypair to use
    constraints:
      - custom_constraint: nova.keypair
        description: Must be a keypair known to Nova

  db_port:
    type: number
    description: Database port number
    default: 50000
    constraints:
      - range: { min: 40000, max: 60000 }
        description: Port number must be between 40000 and 60000

resources:
  stack_one:
    type: OS::Heat::Stack
    properties:
      context:
        region_name: ams01
      template: { get_file: "https://raw.githubusercontent.com/internap/heat-templates/master/hot/hello_world.yaml" }
      timeout: 60
      parameters:
        image: { get_param: image }
        flavor: { get_param: flavor }
        key_name: { get_param: keypair_name }
        networks:
          - network: { get_param: network }
        db_port: { get_param: db_port }

  stack_two:
    type: OS::Heat::Stack
    properties:
      context:
        region_name: nyj01
      template: { get_file: "https://raw.githubusercontent.com/internap/heat-templates/master/hot/hello_world.yaml" }
      timeout: 60
      parameters:
        image: { get_param: image }
        flavor: { get_param: flavor }
        key_name: { get_param: keypair_name }
        networks:
          - network: { get_param: network }
        db_port: { get_param: db_port }

outputs:
  stack_one_outputs:
    description: Output of stack_one.
    value: { get_attr: [stack_one, outputs] }
  stack_two_outputs:
    description: Output of stack_two.
    value: { get_attr: [stack_two, outputs] }
